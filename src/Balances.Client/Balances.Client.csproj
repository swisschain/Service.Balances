<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <Version>1.0.0</Version>
    <Authors>Swisschain</Authors>
    <Company>Swisschain</Company>
    <Product>Swisschain.Service.Balances.Client</Product>
    <PackageId>Swisschain.Service.Balances.Client</PackageId>
    <Description>Client for Swisschain.Service.Balances API</Description>
    <PackageLicenseUrl>https://github.com/SC-Poc/Service.Balances/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/SC-Poc/Service.Balances</PackageProjectUrl>
    <PackageIconUrl>https://avatars3.githubusercontent.com/u/14153330?v=3&amp;amp;s=200</PackageIconUrl>
    <RepositoryUrl>https://github.com/SC-Poc/Service.Balances.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Swisschain</PackageTags>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Autofac" Version="5.1.2" />
    <PackageReference Include="Google.Protobuf" Version="3.11.4" />
    <PackageReference Include="Grpc.Net.Client" Version="2.27.0" />
    <PackageReference Include="Grpc.Tools" Version="2.27.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
  </ItemGroup>
  <ItemGroup>
    <Protobuf Include="..\..\.protos\isalive.proto" Link="Protos\isalive.proto" />
    <Protobuf Include="..\..\.protos\balances.proto" Link="Protos\balances.proto" />
  </ItemGroup>
  <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>
      $(TargetsForTfmSpecificBuildOutput);PackReferencedProjectOutputs
    </TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="PackReferencedProjectOutputs" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>
